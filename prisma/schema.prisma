
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id String @id() @default(uuid())
  email String
  password String
  subscribe Subscribe[]
  is_subscribe Boolean @default(false)
  created_at DateTime @default(now())
  update_at DateTime @updatedAt()
  @@index([email])
}
model Subscribe{
  user_id String
  departaments_id String
  is_pcd Boolean?
  courses_id String
  path_file_pcd String?
  address_id String
  phone String
  data_birth DateTime
  mother_name String?
  father_name String?
  cpf String @unique
  user users @relation(fields: [user_id],references: [id],onDelete: Cascade, onUpdate: Cascade)
  departament departament @relation(fields: [departaments_id],references: [id] ,onDelete: Cascade, onUpdate: Cascade)
  courses courses @relation(fields: [courses_id],references: [id],onDelete: Cascade,onUpdate: Cascade)
  address address @relation(fields: [address_id],references: [id], onDelete: Cascade,onUpdate: Cascade)
  @@index([user_id,cpf])
  @@id([user_id,courses_id,departaments_id])
    created_at DateTime @default(now())
  update_at DateTime @updatedAt()
}
model departament {
id String @id() @default(uuid())
name String
subscribe Subscribe[]
}
model departament_course{
  departament_id String
  course_id String
  @@id([departament_id,course_id])
  created_at DateTime @default(now())
  update_at DateTime @updatedAt()
}

model courses {
  id String @id() @default(uuid())
  name String
  number_vacancies Int
  created_at DateTime @default(now())
  update_at DateTime @updatedAt()

  Subscribe Subscribe[]
}

model address {
  id            String @id @default(uuid())
  cep           String @db.VarChar(8) 
  state         String @db.VarChar(25)
  city          String @db.VarChar(50)
  neighborhood  String @db.VarChar(50)
  street        String @db.VarChar(50)
  number        String @db.VarChar(10)
  Subscribe Subscribe[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt()

}
